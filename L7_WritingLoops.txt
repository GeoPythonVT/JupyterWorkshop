Web-based Tools for Teaching and Research: Jupyter Notebooks and GitHub
A workshop of the Academy of Data Sciences at the College of Science
Jupyter Notebooks & Python

Your name

----------------------------------------------------------------------

Lesson 7: Writing Loops
----------------------------------------------------------------------
This lesson is following the carpentry tutorial "Programming with Python":
https://software-carpentry.org/lessons/




Repeating Actions with Loops
----------------------------
We have a dozen data sets right now, though, and more on the way. We want to create plots for all of our data sets with a single statement. To do that, we’ll have to teach the computer how to repeat things.

An example task that we might want to repeat is accessing numbers in a list, which we will do by printing each number on a line of its own.


odds = [1, 3, 5, 7, 9, 11]


# this is very inefficient
print(odds[0])
print(odds[1])
print(odds[2])
print(odds[3])
# ...


# this can be done faster with a for-loop:
for num in odds:
    print(num)


The improved version uses a for loop to repeat an operation — in this case, printing — once for each thing in a sequence. The general form of a loop is:

for variable in collection:
    # do things using variable, such as print

Using the odds example above, the loop might look like this:

>>> embed the image <img/loops_image_num.png>

where each number (num) in the variable odds is looped through and printed one number after another. The other numbers in the diagram denote which loop cycle the number was printed in (1 being the first loop cycle, and 6 being the final loop cycle).



Importance of indent
---------------------

We can call the loop variable anything we like, but there must be a colon at the end of the line starting the loop, and we must indent anything we want to run inside the loop. Unlike many other languages, there is no command to signify the end of the loop body (e.g. end for); what is indented after the for statement belongs to the loop.

Here’s another loop that repeatedly updates a variable:


length = 0
names = ['Curie', 'Darwin', 'Turing']
for value in names:
    length = length + 1
print('There are', length, 'names in the list.')


There are 3 names in the list.




Summary
-------
Key Points
Use for variable in sequence to process the elements of a sequence one at a time.
The body of a for loop must be indented.
